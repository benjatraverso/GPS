#include "UARTtoI2C.h"

void setup()
{
  // initialize serial:
  Serial.begin(4800);
  // reserve 200 bytes for the inputString:
  gsGPSBuffer.reserve(100);
}

void loop()
{
  // print the string when a newline arrives:
  if(stringComplete)
  {
    bool bValid = true;
    bValid = ValidateBlock();
    bValid = bValid && StoreData();
    gsGPSBuffer = "";
    int gi = 0;
    int giPos = 1;
    stringComplete = false;
    
    Serial.print("Latitude: ");
    Serial.print(gfLatitude);
    Serial.print(' ');
    Serial.println(gcLatitude);
    Serial.print("Longitude: ");
    Serial.print(gfLongitude);
    Serial.print(' ');
    Serial.println(gcLongitude);
  }
  //delay(1000);
}

bool StoreData( void )
{
  gcLatitude = gsGPSBuffer.charAt(giOffsets[3]);
  gfLatitude = gsGPSBuffer.substring(giOffsets[2], giOffsets[3-1]).toFloat();
  Serial.println("Latitude: ");
  Serial.println(gfLatitude);
  Serial.println(" ");
  Serial.println(gcLatitude);
  
  if( gsGPSBuffer.charAt( giOffsets[2] ) == '-' && gfLatitude > 0 )
  {
    gfLatitude = gfLatitude * (-1);
  }

  gcLongitude = gsGPSBuffer.charAt(giOffsets[5]);
  gfLongitude = gsGPSBuffer.substring(giOffsets[4], giOffsets[5-1]).toFloat();
  if( gsGPSBuffer.charAt( giOffsets[4] ) == '-' && gfLongitude > 0 )
  {
    gfLongitude = gfLongitude * (-1);
  }

  Serial.println("Latitude: ");
  Serial.println(gfLongitude);
  Serial.println(" ");
  Serial.println(gcLongitude);
  bool bValid = true;

  bValid = gfLatitude < NORTHEST && gfLatitude > SOUTHEST;
  bValid = bValid && gcLatitude == LATITUDE_CHAR;
  bValid = bValid && (gfLongitude < NORTHEST && gfLongitude > SOUTHEST);
  bValid = bValid && gcLongitude == LONGITUDE_CHAR;

  if(!bValid)
  {
    Serial.println("Data validation failed");
  }
  return bValid;
}

bool ValidateBlock( void )
{
  Serial.println("buffer length: ");
  Serial.println(gsGPSBuffer.length());
  Serial.println("Checksum position: ");
  Serial.println(giCheckSumPos);
  Serial.println("Checksum: ");
  Serial.println(gsGPSBuffer.substring(giCheckSumPos).toInt());
  bool bValid = gsGPSBuffer.length() == gsGPSBuffer.substring(giCheckSumPos).toInt();
  if(!bValid)
  {
    Serial.println("Checksum validation failed");
  }
  return bValid;
}

void serialEvent()
{  
  while(Serial.available())
  {
    int iChar = Serial.read();
    if(iChar == ',')
    {
      giOffsets[gi++] = giPos;
    }
    else if( iChar == '*' )
    {
      giCheckSumPos = giPos;
    }

    if (iChar == '\n')
    {
      stringComplete = true;
      // we want the checksum to be the last thing in the buffer
      flushSerial();
      break;
    }
    else
    {
      gsGPSBuffer += (char)iChar;
    }
    giPos++;
  }
}


void flushSerial( void )
{
  while(Serial.available())
  Serial.read();
}


